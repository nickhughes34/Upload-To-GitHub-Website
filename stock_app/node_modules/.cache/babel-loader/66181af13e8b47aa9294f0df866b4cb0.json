{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicholas Hughes\\\\Desktop\\\\Website\\\\React\\\\apple_clone\\\\src\\\\components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(_ref) {\n  _s();\n\n  let {\n    setTop10,\n    top10,\n    setFinalSearch\n  } = _ref;\n  const resultsRef = React.useRef(null);\n  const [currentSearch, setCurrentSearch] = useState(\"\");\n  const searchResults = [\"\"];\n\n  function getResults() {\n    let temp = resultsRef.current.value.toUpperCase();\n\n    if (temp !== \"\") {\n      if (temp.length >= 1) {\n        if (top10.includes(temp) === false) {\n          if (top10.length <= 9) {\n            setTop10(top10 => [temp, ...top10]);\n          }\n\n          if (top10.length >= 10) {\n            top10.pop();\n            setTop10(top10 => [temp, ...top10]);\n          }\n        }\n\n        setFinalSearch(temp);\n      }\n    }\n\n    resultsRef.current.value = \"\";\n    setCurrentSearch(\"\");\n  }\n\n  function setCurrent() {\n    setCurrentSearch(resultsRef.current.value);\n  }\n\n  function setResults(item) {\n    //resultsRef.current.value = item;\n    //setCurrentSearch(resultsRef.current.value);\n    item = item.toUpperCase();\n    resultsRef.current.value = \"\";\n    setCurrentSearch(\"\");\n    setFinalSearch(item);\n\n    if (top10.includes(item) === false) {\n      if (top10.length <= 4) {\n        setTop10(top10 => [item, ...top10]);\n      }\n\n      if (top10.length >= 5) {\n        top10.pop();\n        setTop10(top10 => [item, ...top10]);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"\",\n    onSubmit: e => {\n      e.preventDefault();\n      getResults();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: \"Search Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"\",\n      controlid: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter stock\",\n        ref: resultsRef,\n        onChange: setCurrent,\n        style: {\n          textTransform: \"uppercase\",\n          borderRadius: \"0px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        onClick: () => {\n          getResults();\n        },\n        style: {\n          borderRadius: \"0px\"\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customDropdown\",\n      children: searchResults.filter(item => {\n        const searchTerm = currentSearch.toLowerCase();\n        const fullName = item.toLowerCase();\n        return searchTerm && fullName.startsWith(searchTerm) && fullName !== searchTerm;\n      }).slice(0, 10).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setResults(item);\n        },\n        className: \"dropdown-row\",\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"M12verdoRyhQG0FEwWtow5V4WEk=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/Nicholas Hughes/Desktop/Website/React/apple_clone/src/components/Search.js"],"names":["React","useState","Button","Form","InputGroup","Search","setTop10","top10","setFinalSearch","resultsRef","useRef","currentSearch","setCurrentSearch","searchResults","getResults","temp","current","value","toUpperCase","length","includes","pop","setCurrent","setResults","item","e","preventDefault","textTransform","borderRadius","filter","searchTerm","toLowerCase","fullName","startsWith","slice","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\nfunction Search( {setTop10, top10, setFinalSearch} ) {\r\n  const resultsRef = React.useRef(null);\r\n  const [currentSearch, setCurrentSearch] = useState(\"\");\r\n\r\n  const searchResults = [\"\"]\r\n\r\n  function getResults(){\r\n    let temp = resultsRef.current.value.toUpperCase();\r\n\r\n    if (temp !== \"\"){\r\n      if (temp.length >= 1){\r\n        if (top10.includes(temp) === false){\r\n\r\n          if (top10.length <= 9){\r\n            setTop10( top10 => [temp, ...top10]);\r\n          }\r\n\r\n          if (top10.length >= 10){\r\n            top10.pop()\r\n            setTop10( top10 => [temp, ...top10]);\r\n          }\r\n\r\n        }\r\n        setFinalSearch(temp);\r\n      }\r\n    }\r\n\r\n    resultsRef.current.value = \"\";\r\n    setCurrentSearch(\"\");\r\n  }\r\n\r\n  function setCurrent(){\r\n    setCurrentSearch(resultsRef.current.value);\r\n  }\r\n\r\n  function setResults(item) {\r\n    //resultsRef.current.value = item;\r\n    //setCurrentSearch(resultsRef.current.value);\r\n    item = item.toUpperCase();\r\n    resultsRef.current.value = \"\";\r\n    setCurrentSearch(\"\");\r\n    setFinalSearch(item);\r\n\r\n    if (top10.includes(item) === false){\r\n\r\n      if (top10.length <= 4){\r\n        setTop10( top10 => [item, ...top10]);\r\n      }\r\n\r\n      if (top10.length >= 5){\r\n        top10.pop()\r\n        setTop10( top10 => [item, ...top10]);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Form className='' onSubmit={e => { e.preventDefault(); getResults();}}>\r\n      <Form.Label>Search Stock</Form.Label>\r\n      <InputGroup className=\"\" controlid=\"formBasicEmail\">\r\n        <Form.Control type=\"text\" placeholder=\"Enter stock\" ref={resultsRef} onChange = {setCurrent} style={{textTransform: \"uppercase\", borderRadius: \"0px\"}} />\r\n        <Button variant=\"dark\" onClick = {() => {getResults();}} style={{borderRadius: \"0px\"}}>\r\n          Search\r\n        </Button>\r\n      </InputGroup>\r\n\r\n      {/* https://www.youtube.com/watch?v=Jd7s7egjt30&ab_channel=ProgrammingwithMasoud */}\r\n      <div className=\"customDropdown\">\r\n          {searchResults\r\n            .filter((item) => {\r\n              const searchTerm = currentSearch.toLowerCase();\r\n              const fullName = item.toLowerCase();\r\n\r\n              return (\r\n                searchTerm &&\r\n                fullName.startsWith(searchTerm) &&\r\n                fullName !== searchTerm\r\n              );\r\n            })\r\n            .slice(0, 10)\r\n            .map((item) => (\r\n              <div onClick={() => {setResults(item);}} className=\"dropdown-row\" key={item}>\r\n                {item}\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}