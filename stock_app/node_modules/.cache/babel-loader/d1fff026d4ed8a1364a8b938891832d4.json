{"ast":null,"code":"import React from \"react\";\n\nconst ForexCrossRates = props => {\n  const {\n    widgetProps,\n    widgetPropsAny\n  } = props;\n  const ref = React.createRef();\n  React.useEffect(() => {\n    let refValue;\n\n    if (ref.current) {\n      const script = document.createElement(\"script\");\n      script.src = \"https://s3.tradingview.com/external-embedding/\" + \"embed-widget-forex-cross-rates.js\";\n      script.async = true;\n      script.type = \"text/javascript\";\n      script.innerHTML = JSON.stringify(Object.assign(Object.assign({\n        \"width\": 770,\n        \"height\": 400,\n        \"currencies\": [\"EUR\", \"USD\", \"JPY\", \"GBP\", \"CHF\", \"AUD\", \"CAD\", \"NZD\", \"CNY\"],\n        \"isTransparent\": false,\n        \"colorTheme\": \"dark\",\n        \"locale\": \"en\"\n      }, widgetProps), widgetPropsAny));\n      ref.current.appendChild(script);\n      refValue = ref.current;\n    }\n\n    return () => {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, widgetProps, widgetPropsAny]);\n  return React.createElement(\"div\", {\n    ref: ref\n  });\n};\n\nexport default ForexCrossRates;","map":{"version":3,"sources":["C:/Users/Nicholas Hughes/Desktop/Website/React/apple_clone/node_modules/react-tradingview-embed/dist/components/ForexCrossRates.js"],"names":["React","ForexCrossRates","props","widgetProps","widgetPropsAny","ref","createRef","useEffect","refValue","current","script","document","createElement","src","async","type","innerHTML","JSON","stringify","Object","assign","appendChild","firstChild","removeChild"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCF,KAAxC;AACA,QAAMG,GAAG,GAAGL,KAAK,CAACM,SAAN,EAAZ;AACAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClB,QAAIC,QAAJ;;AACA,QAAIH,GAAG,CAACI,OAAR,EAAiB;AACb,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAa,mDACP,mCADN;AAEAH,MAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACAJ,MAAAA,MAAM,CAACK,IAAP,GAAc,iBAAd;AACAL,MAAAA,MAAM,CAACM,SAAP,GAAmBC,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;AAAE,iBAAS,GAAX;AAAgB,kBAAU,GAA1B;AAA+B,sBAAc,CACnG,KADmG,EAEnG,KAFmG,EAGnG,KAHmG,EAInG,KAJmG,EAKnG,KALmG,EAMnG,KANmG,EAOnG,KAPmG,EAQnG,KARmG,EASnG,KATmG,CAA7C;AAUvD,yBAAiB,KAVsC;AAU/B,sBAAc,MAViB;AAUT,kBAAU;AAVD,OAAd,EAUuBjB,WAVvB,CAAd,EAUmDC,cAVnD,CAAf,CAAnB;AAWAC,MAAAA,GAAG,CAACI,OAAJ,CAAYY,WAAZ,CAAwBX,MAAxB;AACAF,MAAAA,QAAQ,GAAGH,GAAG,CAACI,OAAf;AACH;;AACD,WAAO,MAAM;AACT,UAAID,QAAJ,EAAc;AACV,eAAOA,QAAQ,CAACc,UAAhB,EAA4B;AACxBd,UAAAA,QAAQ,CAACe,WAAT,CAAqBf,QAAQ,CAACc,UAA9B;AACH;AACJ;AACJ,KAND;AAOH,GA7BD,EA6BG,CAACjB,GAAD,EAAMF,WAAN,EAAmBC,cAAnB,CA7BH;AA8BA,SAAOJ,KAAK,CAACY,aAAN,CAAoB,KAApB,EAA2B;AAAEP,IAAAA,GAAG,EAAEA;AAAP,GAA3B,CAAP;AACH,CAlCD;;AAmCA,eAAeJ,eAAf","sourcesContent":["import React from \"react\";\r\nconst ForexCrossRates = (props) => {\r\n    const { widgetProps, widgetPropsAny } = props;\r\n    const ref = React.createRef();\r\n    React.useEffect(() => {\r\n        let refValue;\r\n        if (ref.current) {\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://s3.tradingview.com/external-embedding/\"\r\n                + \"embed-widget-forex-cross-rates.js\";\r\n            script.async = true;\r\n            script.type = \"text/javascript\";\r\n            script.innerHTML = JSON.stringify(Object.assign(Object.assign({ \"width\": 770, \"height\": 400, \"currencies\": [\r\n                    \"EUR\",\r\n                    \"USD\",\r\n                    \"JPY\",\r\n                    \"GBP\",\r\n                    \"CHF\",\r\n                    \"AUD\",\r\n                    \"CAD\",\r\n                    \"NZD\",\r\n                    \"CNY\"\r\n                ], \"isTransparent\": false, \"colorTheme\": \"dark\", \"locale\": \"en\" }, widgetProps), widgetPropsAny));\r\n            ref.current.appendChild(script);\r\n            refValue = ref.current;\r\n        }\r\n        return () => {\r\n            if (refValue) {\r\n                while (refValue.firstChild) {\r\n                    refValue.removeChild(refValue.firstChild);\r\n                }\r\n            }\r\n        };\r\n    }, [ref, widgetProps, widgetPropsAny]);\r\n    return React.createElement(\"div\", { ref: ref });\r\n};\r\nexport default ForexCrossRates;\r\n"]},"metadata":{},"sourceType":"module"}