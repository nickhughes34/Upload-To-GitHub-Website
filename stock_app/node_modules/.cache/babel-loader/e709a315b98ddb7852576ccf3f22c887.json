{"ast":null,"code":"import React from \"react\";\n\nconst Ticker = props => {\n  const {\n    widgetProps,\n    widgetPropsAny\n  } = props;\n  const ref = React.createRef();\n  React.useEffect(() => {\n    let refValue;\n\n    if (ref.current) {\n      const script = document.createElement(\"script\");\n      script.src = \"https://s3.tradingview.com/external-embedding/\" + \"embed-widget-tickers.js\";\n      script.async = true;\n      script.type = \"text/javascript\";\n      script.innerHTML = JSON.stringify(Object.assign(Object.assign({\n        \"colorTheme\": \"dark\",\n        \"isTransparent\": false,\n        \"showSymbolLogo\": true,\n        \"locale\": \"en\",\n        \"symbols\": [{\n          \"proName\": \"FOREXCOM:SPXUSD\",\n          \"title\": \"S&P 500\"\n        }, {\n          \"proName\": \"FOREXCOM:NSXUSD\",\n          \"title\": \"Nasdaq 100\"\n        }, {\n          \"proName\": \"FX_IDC:EURUSD\",\n          \"title\": \"EUR/USD\"\n        }, {\n          \"proName\": \"BITSTAMP:BTCUSD\",\n          \"title\": \"BTC/USD\"\n        }, {\n          \"proName\": \"BITSTAMP:ETHUSD\",\n          \"title\": \"ETH/USD\"\n        }]\n      }, widgetProps), widgetPropsAny));\n      ref.current.appendChild(script);\n      refValue = ref.current;\n    }\n\n    return () => {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, widgetProps, widgetPropsAny]);\n  return React.createElement(\"div\", {\n    ref: ref\n  });\n};\n\nexport default Ticker;","map":{"version":3,"sources":["C:/Users/Nicholas Hughes/Desktop/Website/React/apple_clone/node_modules/react-tradingview-embed/dist/components/Ticker.js"],"names":["React","Ticker","props","widgetProps","widgetPropsAny","ref","createRef","useEffect","refValue","current","script","document","createElement","src","async","type","innerHTML","JSON","stringify","Object","assign","appendChild","firstChild","removeChild"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCF,KAAxC;AACA,QAAMG,GAAG,GAAGL,KAAK,CAACM,SAAN,EAAZ;AACAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AAClB,QAAIC,QAAJ;;AACA,QAAIH,GAAG,CAACI,OAAR,EAAiB;AACb,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,MAAAA,MAAM,CAACG,GAAP,GAAa,mDACP,yBADN;AAEAH,MAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACAJ,MAAAA,MAAM,CAACK,IAAP,GAAc,iBAAd;AACAL,MAAAA,MAAM,CAACM,SAAP,GAAmBC,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc;AAAE,sBAAc,MAAhB;AAAwB,yBAAiB,KAAzC;AAAgD,0BAAkB,IAAlE;AAAwE,kBAAU,IAAlF;AAAwF,mBAAW,CACzJ;AACI,qBAAW,iBADf;AAEI,mBAAS;AAFb,SADyJ,EAKzJ;AACI,qBAAW,iBADf;AAEI,mBAAS;AAFb,SALyJ,EASzJ;AACI,qBAAW,eADf;AAEI,mBAAS;AAFb,SATyJ,EAazJ;AACI,qBAAW,iBADf;AAEI,mBAAS;AAFb,SAbyJ,EAiBzJ;AACI,qBAAW,iBADf;AAEI,mBAAS;AAFb,SAjByJ;AAAnG,OAAd,EAqBvCjB,WArBuC,CAAd,EAqBXC,cArBW,CAAf,CAAnB;AAsBAC,MAAAA,GAAG,CAACI,OAAJ,CAAYY,WAAZ,CAAwBX,MAAxB;AACAF,MAAAA,QAAQ,GAAGH,GAAG,CAACI,OAAf;AACH;;AACD,WAAO,MAAM;AACT,UAAID,QAAJ,EAAc;AACV,eAAOA,QAAQ,CAACc,UAAhB,EAA4B;AACxBd,UAAAA,QAAQ,CAACe,WAAT,CAAqBf,QAAQ,CAACc,UAA9B;AACH;AACJ;AACJ,KAND;AAOH,GAxCD,EAwCG,CAACjB,GAAD,EAAMF,WAAN,EAAmBC,cAAnB,CAxCH;AAyCA,SAAOJ,KAAK,CAACY,aAAN,CAAoB,KAApB,EAA2B;AAAEP,IAAAA,GAAG,EAAEA;AAAP,GAA3B,CAAP;AACH,CA7CD;;AA8CA,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\r\nconst Ticker = (props) => {\r\n    const { widgetProps, widgetPropsAny } = props;\r\n    const ref = React.createRef();\r\n    React.useEffect(() => {\r\n        let refValue;\r\n        if (ref.current) {\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://s3.tradingview.com/external-embedding/\"\r\n                + \"embed-widget-tickers.js\";\r\n            script.async = true;\r\n            script.type = \"text/javascript\";\r\n            script.innerHTML = JSON.stringify(Object.assign(Object.assign({ \"colorTheme\": \"dark\", \"isTransparent\": false, \"showSymbolLogo\": true, \"locale\": \"en\", \"symbols\": [\r\n                    {\r\n                        \"proName\": \"FOREXCOM:SPXUSD\",\r\n                        \"title\": \"S&P 500\"\r\n                    },\r\n                    {\r\n                        \"proName\": \"FOREXCOM:NSXUSD\",\r\n                        \"title\": \"Nasdaq 100\"\r\n                    },\r\n                    {\r\n                        \"proName\": \"FX_IDC:EURUSD\",\r\n                        \"title\": \"EUR/USD\"\r\n                    },\r\n                    {\r\n                        \"proName\": \"BITSTAMP:BTCUSD\",\r\n                        \"title\": \"BTC/USD\"\r\n                    },\r\n                    {\r\n                        \"proName\": \"BITSTAMP:ETHUSD\",\r\n                        \"title\": \"ETH/USD\"\r\n                    }\r\n                ] }, widgetProps), widgetPropsAny));\r\n            ref.current.appendChild(script);\r\n            refValue = ref.current;\r\n        }\r\n        return () => {\r\n            if (refValue) {\r\n                while (refValue.firstChild) {\r\n                    refValue.removeChild(refValue.firstChild);\r\n                }\r\n            }\r\n        };\r\n    }, [ref, widgetProps, widgetPropsAny]);\r\n    return React.createElement(\"div\", { ref: ref });\r\n};\r\nexport default Ticker;\r\n"]},"metadata":{},"sourceType":"module"}