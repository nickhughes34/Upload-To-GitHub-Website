{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicholas Hughes\\\\Desktop\\\\Website\\\\Apple_Clone\\\\apple_clone\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = \"todoApp.todos\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.string);\n  }, [todos]);\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: Date(),\n        name: name,\n        complete: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: todoNameRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \" Add Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Clear Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"0 left to do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"52iFtPgzl31SmfSv7XjBgNY9Iv8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Nicholas Hughes/Desktop/Website/Apple_Clone/apple_clone/src/App.js"],"names":["React","useState","useRef","useEffect","TodoList","LOCAL_STORAGE_KEY","App","todos","setTodos","todoNameRef","localStorage","setItem","JSON","string","handleAddTodo","e","name","current","value","prevTodos","id","Date","complete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,iBAAiB,GAAG,eAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMQ,WAAW,GAAGP,MAAM,EAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,YAAY,CAACC,OAAb,CAAqBN,iBAArB,EAAwCO,IAAI,CAACC,MAA7C;AACH,GAFQ,EAEN,CAACN,KAAD,CAFM,CAAT;;AAIA,WAASO,aAAT,CAAwBC,CAAxB,EAA2B;AACvB,UAAMC,IAAI,GAAGP,WAAW,CAACQ,OAAZ,CAAoBC,KAAjC;AACA,QAAIF,IAAI,KAAK,EAAb,EAAiB;AAEjBR,IAAAA,QAAQ,CAAEW,SAAS,IAAI;AACrB,aAAO,CAAC,GAAGA,SAAJ,EAAe;AAACC,QAAAA,EAAE,EAAEC,IAAI,EAAT;AAAaL,QAAAA,IAAI,EAAEA,IAAnB;AAAyBM,QAAAA,QAAQ,EAAE;AAAnC,OAAf,CAAP;AACD,KAFO,CAAR;AAIAb,IAAAA,WAAW,CAACQ,OAAZ,CAAoBC,KAApB,GAA4B,IAA5B;AACH;;AAED,sBACE;AAAA,4BACA,QAAE,QAAF;AAAW,MAAA,KAAK,EAAIX;AAApB;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,MAAA,GAAG,EAAIE,WAAd;AAA2B,MAAA,IAAI,EAAG;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAQ,MAAA,OAAO,EAAIK,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADF;AASD;;GA5BQR,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\nimport TodoList from \"./TodoList\"\n\nconst LOCAL_STORAGE_KEY = \"todoApp.todos\"\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(()=>{\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.string)\n  }, [todos])\n\n  function handleAddTodo (e) {\n      const name = todoNameRef.current.value\n      if (name === \"\") return\n\n      setTodos( prevTodos => {\n        return [...prevTodos, {id: Date(), name: name, complete: false}]\n      })\n\n      todoNameRef.current.value = null\n  }\n\n  return (\n    <>\n    < TodoList todos = {todos} />\n    <input ref = {todoNameRef} type = \"text\" />\n    <button onClick = {handleAddTodo}> Add Todo </button>\n    <button> Clear Todo </button>\n    <div>0 left to do</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}